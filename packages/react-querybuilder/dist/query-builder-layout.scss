/**
 * This file contains layout/structural styles only.
 *
 * To include decorative styles like colors and border styles,
 * import query-builder.scss instead.
 */

// DO NOT ALTER OR REMOVE REGION NAMES. Some of them are used
// to generate code snippets in the documentation.

// #region Basic
$rqb-spacing: 0.5rem !default;
$rqb-border-width: 1px !default;
// #endregion

// #region Branches
$rqb-branch-indent: $rqb-spacing !default;
$rqb-branch-width: $rqb-border-width !default;
// #endregion

// Default styles
.ruleGroup {
  display: flex;
  flex-direction: column;
  gap: $rqb-spacing;
  padding: $rqb-spacing;
  border-width: $rqb-border-width;

  .ruleGroup-body {
    display: flex;
    flex-direction: column;
    gap: $rqb-spacing;

    &:empty {
      display: none;
    }
  }

  .ruleGroup-header,
  .rule {
    display: flex;
    gap: $rqb-spacing;
    align-items: center;
  }

  .rule {
    .rule-value:has(.rule-value-list-item) {
      display: flex;
      gap: $rqb-spacing;
      align-items: baseline;
    }
  }

  .betweenRules {
    display: flex;
  }

  .shiftActions {
    display: flex;
    flex-direction: column;

    & > * {
      padding: 0;
    }
  }
}

// #region Drag-and-drop
// Hover styles
.dndOver {
  &.rule,
  &.ruleGroup-header {
    padding-bottom: $rqb-spacing;
  }
  &.betweenRules {
    padding-top: $rqb-spacing;
  }
}
// #endregion

// #region Branch styles
.queryBuilder-branches {
  .ruleGroup-body {
    margin-left: calc(2 * #{$rqb-branch-indent});
  }

  .rule,
  .ruleGroup .ruleGroup {
    position: relative;

    &::before,
    &::after {
      content: '';
      width: $rqb-branch-indent;
      left: calc(-#{$rqb-branch-indent} - #{$rqb-branch-width});
      border-radius: 0;
      position: absolute;
    }

    &::before {
      top: -$rqb-spacing;
      height: calc(50% + #{$rqb-spacing});
      border-width: 0 0 $rqb-branch-width $rqb-branch-width;
    }

    &::after {
      top: 50%;
      height: 50%;
      border-width: 0 0 0 $rqb-branch-width;
    }

    &:last-child::after {
      display: none;
    }
  }

  .ruleGroup .ruleGroup {
    &::before,
    &::after {
      left: calc(calc(-#{$rqb-branch-indent} - #{$rqb-branch-width}) - #{$rqb-border-width});
    }

    &::before {
      top: calc(-#{$rqb-spacing} - #{$rqb-border-width});
      height: calc(50% + #{$rqb-spacing} + #{$rqb-border-width});
    }

    &::after {
      height: calc(50% + #{$rqb-border-width});
    }
  }

  .betweenRules {
    position: relative;

    &::before {
      content: '';
      width: $rqb-branch-indent;
      left: calc(-#{$rqb-branch-indent} - #{$rqb-branch-width});
      border-radius: 0;
      position: absolute;
      top: -$rqb-spacing;
      height: calc(100% + #{$rqb-spacing});
      border-width: 0 0 0 $rqb-branch-width;
    }
  }
}
// #endregion
