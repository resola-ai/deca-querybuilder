{"version":3,"sources":["../src/index.ts","../src/MantineActionElement.tsx","../src/MantineNotToggle.tsx","../src/MantineShiftActions.tsx","../src/MantineValueEditor.tsx","../src/utils.ts","../src/MantineValueSelector.tsx"],"sourcesContent":["import type { ControlElementsProp, FullField } from 'react-querybuilder';\nimport { getCompatContextProvider } from 'react-querybuilder';\nimport { MantineActionElement } from './MantineActionElement';\nimport { MantineNotToggle } from './MantineNotToggle';\nimport { MantineShiftActions } from './MantineShiftActions';\nimport { MantineValueEditor } from './MantineValueEditor';\nimport { MantineValueSelector } from './MantineValueSelector';\n\nexport * from './MantineActionElement';\nexport * from './MantineNotToggle';\nexport * from './MantineShiftActions';\nexport * from './MantineValueEditor';\nexport * from './MantineValueSelector';\n\nexport const mantineControlElements = {\n  actionElement: MantineActionElement,\n  notToggle: MantineNotToggle,\n  shiftActions: MantineShiftActions,\n  valueEditor: MantineValueEditor,\n  valueSelector: MantineValueSelector,\n} satisfies ControlElementsProp<FullField, string>;\n\nexport const QueryBuilderMantine = getCompatContextProvider({\n  key: 'mantine',\n  controlElements: mantineControlElements,\n});\n","import type { ButtonProps } from '@mantine/core';\nimport { Button } from '@mantine/core';\nimport * as React from 'react';\nimport type { ActionProps } from 'react-querybuilder';\n\nexport type MantineActionProps = ActionProps & Partial<ButtonProps>;\n\nexport const MantineActionElement = ({\n  className,\n  handleOnClick,\n  label,\n  title,\n  disabled,\n  disabledTranslation,\n  testID,\n  ruleOrGroup: _rg,\n  path: _path,\n  level: _level,\n  context: _context,\n  validation: _validation,\n  schema: _schema,\n  ...otherProps\n}: MantineActionProps) => (\n  <Button\n    {...otherProps}\n    data-testid={testID}\n    type=\"button\"\n    className={className}\n    title={disabledTranslation && disabled ? disabledTranslation.title : title}\n    onClick={(e: React.MouseEvent) => handleOnClick(e)}\n    disabled={disabled && !disabledTranslation}>\n    {disabledTranslation && disabled ? disabledTranslation.label : label}\n  </Button>\n);\n","import type { SwitchProps } from '@mantine/core';\nimport { Switch } from '@mantine/core';\nimport * as React from 'react';\nimport type { NotToggleProps } from 'react-querybuilder';\n\nexport type MantineNotToggleProps = NotToggleProps & Partial<SwitchProps>;\n\nexport const MantineNotToggle = ({\n  className,\n  handleOnChange,\n  label,\n  checked,\n  title,\n  disabled,\n  testID,\n  path: _path,\n  level: _level,\n  context: _context,\n  validation: _validation,\n  schema: _schema,\n  ruleGroup: _ruleGroup,\n  ...otherProps\n}: MantineNotToggleProps) => (\n  <Switch\n    {...otherProps}\n    data-testid={testID}\n    label={label}\n    className={className}\n    title={title}\n    disabled={disabled}\n    checked={checked}\n    onChange={e => handleOnChange(e.target.checked)}\n  />\n);\n","import { Button } from '@mantine/core';\nimport * as React from 'react';\nimport type { ShiftActionsProps } from 'react-querybuilder';\n\nexport const MantineShiftActions = ({\n  shiftUp,\n  shiftDown,\n  shiftUpDisabled,\n  shiftDownDisabled,\n  disabled,\n  className,\n  labels,\n  titles,\n  testID,\n}: ShiftActionsProps) => (\n  <div data-testid={testID} className={className}>\n    <Button\n      type=\"button\"\n      size=\"compact-xs\"\n      disabled={disabled || shiftUpDisabled}\n      onClick={shiftUp}\n      title={titles?.shiftUp}>\n      {labels?.shiftUp}\n    </Button>\n    <Button\n      type=\"button\"\n      size=\"compact-xs\"\n      disabled={disabled || shiftDownDisabled}\n      onClick={shiftDown}\n      title={titles?.shiftDown}>\n      {labels?.shiftDown}\n    </Button>\n  </div>\n);\n","import { Checkbox, NumberInput, Radio, Switch, Textarea, TextInput } from '@mantine/core';\nimport type { DatesRangeValue, DateValue } from '@mantine/dates';\nimport { DatePickerInput, DateTimePicker } from '@mantine/dates';\nimport dayjs from 'dayjs';\nimport * as React from 'react';\nimport type { ValueEditorProps } from 'react-querybuilder';\nimport { getFirstOption, standardClassnames, useValueEditor } from 'react-querybuilder';\nimport { toNumberInputValue } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype MantineValueEditorProps = ValueEditorProps & { extraProps?: Record<string, any> };\n\nconst dateFormat = 'YYYY-MM-DD';\nconst dateTimeLocalFormat = `${dateFormat}THH:mm:ss`;\n\nexport const MantineValueEditor = (allProps: MantineValueEditorProps) => {\n  const {\n    fieldData,\n    operator,\n    value,\n    handleOnChange,\n    title,\n    className,\n    type,\n    inputType,\n    values = [],\n    listsAsArrays,\n    parseNumbers,\n    separator,\n    valueSource: _vs,\n    disabled,\n    testID,\n    selectorComponent: SelectorComponent = allProps.schema.controls.valueSelector,\n    validation: _validation,\n    extraProps,\n    ...props\n  } = allProps;\n\n  const { valueAsArray, multiValueHandler } = useValueEditor({\n    handleOnChange,\n    inputType,\n    operator,\n    value,\n    type,\n    listsAsArrays,\n    parseNumbers,\n    values,\n  });\n\n  if (operator === 'null' || operator === 'notNull') {\n    return null;\n  }\n\n  const placeHolderText = fieldData?.placeholder ?? '';\n  const inputTypeCoerced = ['in', 'notIn'].includes(operator) ? 'text' : inputType || 'text';\n\n  if (\n    (operator === 'between' || operator === 'notBetween') &&\n    (type === 'select' || type === 'text') &&\n    // Date and time ranges are handled differently in Mantine--see below\n    inputTypeCoerced !== 'date'\n  ) {\n    const editors = ['from', 'to'].map((key, i) => {\n      if (inputTypeCoerced === 'number') {\n        return (\n          <NumberInput\n            key={key}\n            placeholder={placeHolderText}\n            value={toNumberInputValue(valueAsArray[i])}\n            className={`${standardClassnames.valueListItem} input`}\n            disabled={disabled}\n            onChange={v => multiValueHandler(toNumberInputValue(v), i)}\n            {...extraProps}\n          />\n        );\n      }\n      if (inputTypeCoerced === 'datetime-local') {\n        const dateTime = dayjs(valueAsArray[i]);\n        const dateTimeValue = dateTime.isValid() ? dateTime.toDate() : null;\n        return (\n          <DateTimePicker\n            placeholder={undefined}\n            onPointerEnterCapture={undefined}\n            onPointerLeaveCapture={undefined}\n            key={key}\n            value={dateTimeValue}\n            className={standardClassnames.valueListItem}\n            disabled={disabled}\n            withSeconds\n            onChange={d =>\n              multiValueHandler(\n                d ? dayjs(d).format(dateTimeLocalFormat) : /* istanbul ignore next */ '',\n                i\n              )\n            }\n            {...extraProps}\n          />\n        );\n      }\n      if (type === 'text') {\n        return (\n          <TextInput\n            key={key}\n            type={inputTypeCoerced}\n            placeholder={placeHolderText}\n            value={valueAsArray[i] ?? ''}\n            className={`${standardClassnames.valueListItem} input`}\n            disabled={disabled}\n            onChange={e => multiValueHandler(e.target.value, i)}\n            {...extraProps}\n          />\n        );\n      }\n      return (\n        <SelectorComponent\n          {...props}\n          key={key}\n          className={standardClassnames.valueListItem}\n          handleOnChange={v => multiValueHandler(v, i)}\n          disabled={disabled}\n          value={valueAsArray[i] ?? getFirstOption(values)}\n          options={values}\n          listsAsArrays={listsAsArrays}\n        />\n      );\n    });\n\n    return (\n      <span data-testid={testID} className={className} title={title}>\n        {editors[0]}\n        {separator}\n        {editors[1]}\n      </span>\n    );\n  }\n\n  switch (type) {\n    case 'select':\n    case 'multiselect':\n      return (\n        <SelectorComponent\n          {...props}\n          title={title}\n          className={className}\n          handleOnChange={handleOnChange}\n          options={values}\n          value={value}\n          disabled={disabled}\n          multiple={type === 'multiselect'}\n          listsAsArrays={listsAsArrays}\n        />\n      );\n\n    case 'textarea':\n      return (\n        <Textarea\n          className={className}\n          value={value}\n          title={title}\n          placeholder={placeHolderText}\n          disabled={disabled}\n          onChange={e => handleOnChange(e.target.value)}\n          {...extraProps}\n        />\n      );\n\n    case 'switch':\n      return (\n        <Switch\n          className={className}\n          title={title}\n          checked={value}\n          disabled={disabled}\n          onChange={e => handleOnChange(e.target.checked)}\n          {...extraProps}\n        />\n      );\n\n    case 'checkbox':\n      return (\n        <Checkbox\n          className={className}\n          title={title}\n          checked={value}\n          disabled={disabled}\n          onChange={e => handleOnChange(e.target.checked)}\n          {...extraProps}\n        />\n      );\n\n    case 'radio':\n      return (\n        <Radio.Group\n          className={className}\n          title={title}\n          value={value}\n          onChange={handleOnChange}\n          {...extraProps}>\n          {values.map(v => (\n            <Radio key={v.name} value={v.name} label={v.label} disabled={disabled} />\n          ))}\n        </Radio.Group>\n      );\n  }\n\n  if (inputTypeCoerced === 'date' || inputTypeCoerced === 'datetime-local') {\n    if (operator === 'between' || operator === 'notBetween') {\n      const twoDateArray = [null, null].map((defaultValue, i) => {\n        if (!valueAsArray[i]) return defaultValue;\n        let date = dayjs(valueAsArray[i]);\n        if (!date.isValid()) {\n          date = dayjs(`${dayjs().format('YYYY-MM-DD')}T${valueAsArray[i]}`);\n        }\n        return date.isValid() ? date.toDate() : defaultValue;\n      }) as [DateValue, DateValue];\n\n      return (\n        <DatePickerInput\n          data-testid={testID}\n          type=\"range\"\n          value={twoDateArray}\n          className={className}\n          disabled={disabled}\n          onChange={(dates: DatesRangeValue) => {\n            const dateArray = dates.map(d => (d ? dayjs(d).format(dateFormat) : ''));\n            handleOnChange(listsAsArrays ? dateArray : dateArray.join(','));\n          }}\n          {...extraProps}\n        />\n      );\n    }\n\n    if (inputTypeCoerced === 'datetime-local') {\n      return (\n        <DateTimePicker\n          placeholder={undefined}\n          onPointerEnterCapture={undefined}\n          onPointerLeaveCapture={undefined}\n          data-testid={testID}\n          value={!!value && dayjs(value).isValid() ? dayjs(value).toDate() : null}\n          className={className}\n          disabled={disabled}\n          withSeconds\n          onChange={d =>\n            handleOnChange(d ? dayjs(d).format(dateTimeLocalFormat) : /* istanbul ignore next */ '')\n          }\n          {...extraProps}\n        />\n      );\n    }\n\n    return (\n      <DatePickerInput\n        data-testid={testID}\n        type=\"default\"\n        value={!!value && dayjs(value).isValid() ? dayjs(value).toDate() : null}\n        className={className}\n        disabled={disabled}\n        onChange={d =>\n          handleOnChange(d ? dayjs(d).format(dateFormat) : /* istanbul ignore next */ '')\n        }\n        {...extraProps}\n      />\n    );\n  }\n\n  if (inputTypeCoerced === 'number') {\n    return (\n      <NumberInput\n        data-testid={testID}\n        title={title}\n        className={className}\n        placeholder={placeHolderText}\n        disabled={disabled}\n        value={toNumberInputValue(value)}\n        onChange={v => handleOnChange(toNumberInputValue(v))}\n        {...extraProps}\n      />\n    );\n  }\n\n  return (\n    <TextInput\n      data-testid={testID}\n      title={title}\n      className={className}\n      placeholder={placeHolderText}\n      type={inputTypeCoerced}\n      disabled={disabled}\n      value={value}\n      onChange={e => handleOnChange(e.target.value)}\n      {...extraProps}\n    />\n  );\n};\n","import type { ComboboxData } from '@mantine/core';\nimport type { FullOption, FullOptionList } from 'react-querybuilder';\nimport { isOptionGroupArray, parseNumber, uniqOptList } from 'react-querybuilder';\n\nexport const optionListToComboboxData = (list: FullOptionList<FullOption>): ComboboxData => {\n  const uniqList = uniqOptList(list);\n  return isOptionGroupArray(uniqList)\n    ? uniqList.map(og => ({ ...og, group: og.label, items: og.options }))\n    : uniqList.map(opt => ({ name: opt.name, value: opt.name, label: opt.label }));\n};\n\nexport const toNumberInputValue = (val: number | string) => {\n  if (typeof val === 'number') return val;\n  const valParsed = parseNumber(val, { parseNumbers: 'native' });\n  if (!isNaN(valParsed)) return valParsed;\n  return '';\n};\n","import type { MultiSelectProps, SelectProps } from '@mantine/core';\nimport { MultiSelect, Select } from '@mantine/core';\nimport * as React from 'react';\nimport type { VersatileSelectorProps } from 'react-querybuilder';\nimport { useValueSelector } from 'react-querybuilder';\nimport { optionListToComboboxData } from './utils';\n\nexport type MantineValueSelectorProps = VersatileSelectorProps & Partial<SelectProps>;\n\nexport const MantineValueSelector = ({\n  className,\n  handleOnChange,\n  options,\n  value,\n  title,\n  disabled,\n  multiple,\n  listsAsArrays,\n  testID,\n  field: _field,\n  fieldData: _fieldData,\n  rule: _rule,\n  rules: _rules,\n  path: _path,\n  level: _level,\n  context: _context,\n  validation: _validation,\n  schema: _schema,\n  ...otherProps\n}: MantineValueSelectorProps) => {\n  const { onChange, val } = useValueSelector({ handleOnChange, listsAsArrays, multiple, value });\n\n  const data = React.useMemo(() => optionListToComboboxData(options), [options]);\n\n  const changeHandler = (v: string | string[] | null) => onChange(v ?? '');\n\n  return multiple ? (\n    <MultiSelect\n      {...(otherProps as MultiSelectProps)}\n      data-testid={testID}\n      title={title}\n      className={className}\n      data={data}\n      disabled={disabled}\n      value={val as string[]}\n      onChange={changeHandler}\n    />\n  ) : (\n    <Select\n      {...otherProps}\n      data-testid={testID}\n      title={title}\n      className={className}\n      value={val as string}\n      data={data}\n      disabled={disabled}\n      onChange={changeHandler}\n    />\n  );\n};\n"],"mappings":"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","names":["getCompatContextProvider","Button","React","MantineActionElement","className","handleOnClick","label","title","disabled","disabledTranslation","testID","_rg","_path","_level","_context","_validation","_schema","otherProps","e","Switch","React","MantineNotToggle","className","handleOnChange","label","checked","title","disabled","testID","_path","_level","_context","_validation","_schema","_ruleGroup","otherProps","e","Button","React","MantineShiftActions","shiftUp","shiftDown","shiftUpDisabled","shiftDownDisabled","disabled","className","labels","titles","testID","Checkbox","NumberInput","Radio","Switch","Textarea","TextInput","DatePickerInput","DateTimePicker","dayjs","React","getFirstOption","standardClassnames","useValueEditor","isOptionGroupArray","parseNumber","uniqOptList","optionListToComboboxData","list","uniqList","og","opt","toNumberInputValue","val","valParsed","dateFormat","dateTimeLocalFormat","MantineValueEditor","allProps","fieldData","operator","value","handleOnChange","title","className","type","inputType","values","listsAsArrays","parseNumbers","separator","_vs","disabled","testID","SelectorComponent","_validation","extraProps","props","valueAsArray","multiValueHandler","useValueEditor","placeHolderText","inputTypeCoerced","editors","key","i","NumberInput","toNumberInputValue","standardClassnames","v","dateTime","dayjs","dateTimeValue","DateTimePicker","d","TextInput","e","getFirstOption","Textarea","Switch","Checkbox","Radio","twoDateArray","defaultValue","date","DatePickerInput","dates","dateArray","MultiSelect","Select","React","useValueSelector","MantineValueSelector","className","handleOnChange","options","value","title","disabled","multiple","listsAsArrays","testID","_field","_fieldData","_rule","_rules","_path","_level","_context","_validation","_schema","otherProps","onChange","val","useValueSelector","data","optionListToComboboxData","changeHandler","v","MultiSelect","Select","mantineControlElements","MantineActionElement","MantineNotToggle","MantineShiftActions","MantineValueEditor","MantineValueSelector","QueryBuilderMantine","getCompatContextProvider"]}